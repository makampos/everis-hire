// <auto-generated />
using System;
using EverisHire.HireManagement.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EverisHire.HireManagement.Persistence.Migrations
{
    [DbContext(typeof(EverisHireDbContext))]
    [Migration("20211124114328_create-db")]
    partial class createdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.AllocationType", b =>
                {
                    b.Property<Guid>("AllocationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("AllocationTypeId");

                    b.ToTable("AllocationTypes");

                    b.HasData(
                        new
                        {
                            AllocationTypeId = new Guid("edd0a0aa-3025-4d7f-a10e-d8ab6fb748fd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Presencial"
                        },
                        new
                        {
                            AllocationTypeId = new Guid("fce83b42-94bb-42ad-9f29-a609c1af02fc"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Teletrabalho"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Candidate", b =>
                {
                    b.Property<Guid>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AllocationTypeId")
                        .HasColumnType("char(50)")
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LeaderCenters")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Recruiter")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Resume")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("SalaryClaim")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("StatusCandidateId")
                        .HasColumnType("char(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Technology")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("WhoIndicated")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("CandidateId");

                    b.HasIndex("AllocationTypeId");

                    b.HasIndex("StatusCandidateId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Community", b =>
                {
                    b.Property<Guid>("CommunityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CommunityId");

                    b.ToTable("Communities");

                    b.HasData(
                        new
                        {
                            CommunityId = new Guid("1fce3dca-7e41-4300-8b72-3edacadb5863"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Comunidade responsável por desenvolver software para agências de bancos. ",
                            Name = "Rede de Agências"
                        },
                        new
                        {
                            CommunityId = new Guid("d5382ed7-6de5-475e-8faf-361aaa4e335a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Comunidade responsável por desenvolver software para o judiciário ",
                            Name = "Seguimento Jurídico"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Event", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Artist")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("EventId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Interview", b =>
                {
                    b.Property<Guid>("InterviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AllocationType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("AvailableDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CandidateCreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CandidateName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CandidateRecruiterName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CandidateStatus")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CandidateTechnology")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CandidateYearsOfExperience")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Community")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateInterView")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EverJob")
                        .HasColumnType("int");

                    b.Property<string>("InterViewLeaderCenters")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("JobId")
                        .HasColumnType("char(36)");

                    b.Property<string>("JobRecruiterName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("JobTechnology")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("JobYearsOfExperience")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LeaderCenters")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LtfOrPl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ManagerSp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("MaximumSalary")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Offer")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("SalaryClaim")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("StatusInterviewId")
                        .HasColumnType("char(36)");

                    b.Property<string>("TechnicalInterviewer")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("InterviewId");

                    b.HasIndex("CandidateId")
                        .IsUnique();

                    b.HasIndex("JobId")
                        .IsUnique();

                    b.HasIndex("StatusInterviewId");

                    b.ToTable("Interviews");
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Job", b =>
                {
                    b.Property<Guid>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AllocationTypeId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AllocationTypeId1")
                        .HasColumnType("char(36)");

                    b.Property<string>("Community")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DesiredDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EverJob")
                        .HasColumnType("int");

                    b.Property<string>("Justification")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LeaderCenters")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LtfOrPl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ManagerSp")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<decimal>("MaximumSalary")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("OpeningDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PriorityDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Recruiter")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Squad")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("StatusJobId")
                        .HasColumnType("char(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Technology")
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("JobId");

                    b.HasIndex("AllocationTypeId");

                    b.HasIndex("AllocationTypeId1")
                        .IsUnique();

                    b.HasIndex("ProjectId");

                    b.HasIndex("StatusJobId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.LeaderCenters", b =>
                {
                    b.Property<Guid>("LeaderCentersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("LeaderCentersId");

                    b.ToTable("LeaderCenters");

                    b.HasData(
                        new
                        {
                            LeaderCentersId = new Guid("88f77a96-db57-4c49-ac38-287d29d3cce4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mirella Malu Vitória Pereira"
                        },
                        new
                        {
                            LeaderCentersId = new Guid("2c3c9eda-cf5e-4a49-95c5-0c0537bdceb6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Lucca Felipe Renato Araújo"
                        },
                        new
                        {
                            LeaderCentersId = new Guid("56600516-88d8-43df-97e8-f2c9cb81dc84"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alexandre Heitor Pedro Henrique Ferreira"
                        },
                        new
                        {
                            LeaderCentersId = new Guid("f8507c2d-7579-42d3-a533-e499a605c768"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rosângela Andreia Manuela Nogueira"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Ltf", b =>
                {
                    b.Property<Guid>("LtfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("LtfId");

                    b.ToTable("Ltf");

                    b.HasData(
                        new
                        {
                            LtfId = new Guid("d1ea6cfb-c8b6-4240-83ec-1e270cf4ffc1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Julia Rebeca Alana da Rosa"
                        },
                        new
                        {
                            LtfId = new Guid("def35ef4-b62e-4703-ba53-2081d624fcce"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Filipe Raul Oliver Sales"
                        },
                        new
                        {
                            LtfId = new Guid("09e779c2-8ddc-485c-a1af-35f688900541"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Anderson Oliveira Barbosa"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.ManagerSp", b =>
                {
                    b.Property<Guid>("ManagerSpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ManagerSpId");

                    b.ToTable("ManagerSp");

                    b.HasData(
                        new
                        {
                            ManagerSpId = new Guid("6521a664-018f-48a9-9d8e-36e5288ee611"),
                            Name = "Luiz Cláudio Emanuel Barros"
                        },
                        new
                        {
                            ManagerSpId = new Guid("54aa0ac2-3b29-4ba3-98ea-00eb668b417c"),
                            Name = "Bruno Tomás Fernandes"
                        },
                        new
                        {
                            ManagerSpId = new Guid("cff2ccef-c67c-447b-9717-cca91732c18a"),
                            Name = "Rafael Benjamin Marcos Vinicius da Paz"
                        },
                        new
                        {
                            ManagerSpId = new Guid("28d79a49-f4b4-483b-8c9f-b5a831f145b7"),
                            Name = "Henry Renato Mendes"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("OrderPaid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("OrderTotal")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Priority", b =>
                {
                    b.Property<Guid>("PriorityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PriorityId");

                    b.ToTable("Priorities");

                    b.HasData(
                        new
                        {
                            PriorityId = new Guid("192a00ec-a662-4a6f-9376-cf59c241698e"),
                            Code = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Prioridade máxima para o nível de contratação"
                        },
                        new
                        {
                            PriorityId = new Guid("8c699ce3-f17e-41fe-be04-56dd8d44221d"),
                            Code = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Prioridade inicial para o nível de contratação"
                        },
                        new
                        {
                            PriorityId = new Guid("13787591-4682-4f55-bb66-d6eb53b41f22"),
                            Code = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Prioridade média para o nível de contratação"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Project", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = new Guid("91bb85ac-8e13-4b9f-bbcb-a21b1f1a3c9a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sem descrição",
                            Name = "Banco Itaú"
                        },
                        new
                        {
                            ProjectId = new Guid("c132b5dd-479a-4c57-8969-0fd5f62d7def"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sem descrição",
                            Name = "Santander"
                        },
                        new
                        {
                            ProjectId = new Guid("dce7d803-a44f-4a92-b52d-aa2006376bc6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sem descrição",
                            Name = "Itaú"
                        },
                        new
                        {
                            ProjectId = new Guid("d6f0b8bd-2c2c-4d44-ae92-b6a29c7c73e9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sem descrição",
                            Name = "Hsbc"
                        },
                        new
                        {
                            ProjectId = new Guid("4a92afdf-bff6-454d-bff5-45e5b1fd2edb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sem descrição",
                            Name = "América"
                        },
                        new
                        {
                            ProjectId = new Guid("5ceaa5ef-a0a1-495f-8b69-178ce284d018"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sem descrição",
                            Name = "Caixa"
                        },
                        new
                        {
                            ProjectId = new Guid("4f8d68ea-78a2-4449-be9c-6b474f4f2ffd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sem descrição",
                            Name = "Inter"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Recruiter", b =>
                {
                    b.Property<Guid>("RecruiterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("RecruiterId");

                    b.ToTable("Recruiters");

                    b.HasData(
                        new
                        {
                            RecruiterId = new Guid("7c80caac-ca78-4ae1-8760-6fadb5f17454"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Amanda Nobrega"
                        },
                        new
                        {
                            RecruiterId = new Guid("10692d46-29db-4757-9974-54ff69dfbd60"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Benedito Cláudio Bernardes"
                        },
                        new
                        {
                            RecruiterId = new Guid("e7a3a895-9c23-4f9e-b95b-f9b00155a35d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mariana Eliane Patrícia Assis"
                        },
                        new
                        {
                            RecruiterId = new Guid("a716de56-6f1d-44e6-8e87-2118f88f8fbe"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gustavo Nicolas Leandro da Silva"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Squad", b =>
                {
                    b.Property<Guid>("SquadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SquadId");

                    b.ToTable("Squads");

                    b.HasData(
                        new
                        {
                            SquadId = new Guid("6b233f3f-b9a5-4bca-8888-6c05e7efd5f0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Automação de processos",
                            Name = "Automação"
                        },
                        new
                        {
                            SquadId = new Guid("cb81dbb3-521f-417c-a0eb-d1e609621694"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Extensão da squad no cliente",
                            Name = "Extensão"
                        },
                        new
                        {
                            SquadId = new Guid("2fc6c21f-c70b-4a67-b9dc-6f428aff39e8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Squad que atua o desenvolvimento de novas soluções",
                            Name = "Soluções customizadas"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.StatusCandidate", b =>
                {
                    b.Property<Guid>("StatusCandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StatusCandidateId");

                    b.ToTable("StatusCandidates");

                    b.HasData(
                        new
                        {
                            StatusCandidateId = new Guid("b7eb1a42-58a7-456d-addd-afdca19e7974"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Contratado"
                        },
                        new
                        {
                            StatusCandidateId = new Guid("bcfcb699-d73e-4d91-8a0a-df0da45445df"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Reprovado"
                        },
                        new
                        {
                            StatusCandidateId = new Guid("86829568-fa06-497a-9179-d88ebd1ff876"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Disponível"
                        },
                        new
                        {
                            StatusCandidateId = new Guid("0ac67cf3-8bfa-4b3f-b68b-da2159065afe"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Indisponível"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.StatusInterview", b =>
                {
                    b.Property<Guid>("StatusInterviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("StatusInterviewId");

                    b.ToTable("InterviewStatus");

                    b.HasData(
                        new
                        {
                            StatusInterviewId = new Guid("87b87f11-969e-4ba4-85bc-537caf1c08e2"),
                            Description = "Aberto"
                        },
                        new
                        {
                            StatusInterviewId = new Guid("4d535cd2-6a10-48a4-995f-8a4527db47c5"),
                            Description = "Fechado"
                        },
                        new
                        {
                            StatusInterviewId = new Guid("789d31f7-e584-45cc-82fd-7b4b332b9ac7"),
                            Description = "Contratado"
                        },
                        new
                        {
                            StatusInterviewId = new Guid("71ce3523-552f-4394-948f-4f5a1a61f5c1"),
                            Description = "Reprovado"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.StatusJob", b =>
                {
                    b.Property<Guid>("StatusJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StatusJobId");

                    b.ToTable("StatusJobs");

                    b.HasData(
                        new
                        {
                            StatusJobId = new Guid("8b5b6de5-7af8-497a-b4a9-af51dbde126f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Aberto"
                        },
                        new
                        {
                            StatusJobId = new Guid("b3fc5eff-0179-45d4-a6f9-561958538b71"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Fechado"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Technology", b =>
                {
                    b.Property<Guid>("TechnologyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("TechnologyId");

                    b.ToTable("Techonologies");

                    b.HasData(
                        new
                        {
                            TechnologyId = new Guid("1080b4e8-6c88-4937-b041-01158f7649a2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Framework para desenvolvimento de Single Page Applications",
                            Name = "AngularJS",
                            Type = "Frontend"
                        },
                        new
                        {
                            TechnologyId = new Guid("fc69eabf-ead5-4a93-8a17-c76882913453"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Framework para desenvolvimento de Single Page Applications",
                            Name = "ReactJS",
                            Type = "Frontend"
                        },
                        new
                        {
                            TechnologyId = new Guid("b6dc1e53-9b22-4884-aba2-c5b66e17df48"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Framework para desenvolvimento de Single Page Applications e Mobile",
                            Name = "Flutter",
                            Type = "Frontend"
                        },
                        new
                        {
                            TechnologyId = new Guid("889c8a85-567b-476c-be06-00a018b5254a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Framework para desenvolvimento de Single Page Applications",
                            Name = "VueJS",
                            Type = "Frontend"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.YearsOfExperience", b =>
                {
                    b.Property<Guid>("YearsOfExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ViewValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("YearsOfExperienceId");

                    b.ToTable("YearsOfExperience");
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Candidate", b =>
                {
                    b.HasOne("EverisHire.HireManagement.Domain.Entities.AllocationType", "AllocationType")
                        .WithMany("Candidates")
                        .HasForeignKey("AllocationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EverisHire.HireManagement.Domain.Entities.StatusCandidate", "StatusCandidate")
                        .WithMany("Candidates")
                        .HasForeignKey("StatusCandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Event", b =>
                {
                    b.HasOne("EverisHire.HireManagement.Domain.Entities.Category", "Category")
                        .WithMany("Events")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Interview", b =>
                {
                    b.HasOne("EverisHire.HireManagement.Domain.Entities.Candidate", "Candidate")
                        .WithOne("Interview")
                        .HasForeignKey("EverisHire.HireManagement.Domain.Entities.Interview", "CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EverisHire.HireManagement.Domain.Entities.Job", "Job")
                        .WithOne("Interview")
                        .HasForeignKey("EverisHire.HireManagement.Domain.Entities.Interview", "JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EverisHire.HireManagement.Domain.Entities.StatusInterview", "StatusInterview")
                        .WithMany("Interviews")
                        .HasForeignKey("StatusInterviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Job", b =>
                {
                    b.HasOne("EverisHire.HireManagement.Domain.Entities.AllocationType", "AllocationType")
                        .WithMany("Jobs")
                        .HasForeignKey("AllocationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EverisHire.HireManagement.Domain.Entities.AllocationType", null)
                        .WithOne("Job")
                        .HasForeignKey("EverisHire.HireManagement.Domain.Entities.Job", "AllocationTypeId1");

                    b.HasOne("EverisHire.HireManagement.Domain.Entities.Project", "Project")
                        .WithMany("Jobs")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EverisHire.HireManagement.Domain.Entities.StatusJob", "StatusJob")
                        .WithMany("Jobs")
                        .HasForeignKey("StatusJobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
