// <auto-generated />
using System;
using EverisHire.HireManagement.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EverisHire.HireManagement.Persistence.Migrations
{
    [DbContext(typeof(EverisHireDbContext))]
    partial class EverisHireDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Candidate", b =>
                {
                    b.Property<Guid>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AlocationType")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("JobId")
                        .HasColumnType("char(36)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<decimal>("SalaryClaim")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("WhoIndicated")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("CandidateId");

                    b.HasIndex("JobId");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Community", b =>
                {
                    b.Property<Guid>("CommunityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CommunityId");

                    b.ToTable("Communities");

                    b.HasData(
                        new
                        {
                            CommunityId = new Guid("556e39aa-1ee6-4447-9579-ec561c45eb3e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Comunidade responsável por desenvolver software para agências de bancos. ",
                            Name = "Rede de Agências"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Event", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Artist")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("EventId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Job", b =>
                {
                    b.Property<Guid>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AllocationType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Community")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DesiredDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EverJob")
                        .HasColumnType("int");

                    b.Property<string>("Justification")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LeaderCenters")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LtfOrPl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ManagerSp")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<decimal>("MaximumSalary")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("OpeningDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PriorityDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Recruiter")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Squad")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<string>("Technology")
                        .HasColumnType("varchar(20) CHARACTER SET utf8mb4")
                        .HasMaxLength(20);

                    b.Property<Guid>("YearsOfExperience")
                        .HasColumnType("char(36)");

                    b.HasKey("JobId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            JobId = new Guid("4bacb9db-5cdc-408a-8a8b-bd2e3727ba05"),
                            AllocationType = "Remoto",
                            Community = "Inovação",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DesiredDate = new DateTime(2022, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EverJob = 176498,
                            Justification = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse nec enim condimentum.",
                            LeaderCenters = "Roosevelt Gaipó",
                            LtfOrPl = "Adilson Hemmel Dias",
                            ManagerSp = "Renato Oliveira",
                            MaximumSalary = 15000m,
                            OpeningDate = new DateTime(2021, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Priority = 10,
                            PriorityDate = new DateTime(2021, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = new Guid("91bb85ac-8e13-4b9f-bbcb-a21b1f1a3c9a"),
                            Recruiter = "Amanda Silva",
                            Squad = "Automação sustentável",
                            Status = "Aberto",
                            Technology = ".NET CORE",
                            YearsOfExperience = new Guid("03cef292-b366-4ec0-b1ec-e02e54380ef6")
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.LeaderCenters", b =>
                {
                    b.Property<Guid>("LeaderCentersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("LeaderCentersId");

                    b.ToTable("LeaderCenters");

                    b.HasData(
                        new
                        {
                            LeaderCentersId = new Guid("95c9689d-4a0d-4c34-b1fc-77d1581a30f8"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Roosevelt Gaipo"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Ltf", b =>
                {
                    b.Property<Guid>("LtfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("LtfId");

                    b.ToTable("Ltf");

                    b.HasData(
                        new
                        {
                            LtfId = new Guid("af9d512a-26ed-492c-ba66-79c73badd20d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Anderson Oliveira Barbosa"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.ManagerSp", b =>
                {
                    b.Property<Guid>("ManagerSpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ManagerSpId");

                    b.ToTable("ManagerSp");

                    b.HasData(
                        new
                        {
                            ManagerSpId = new Guid("2bed1707-291b-491e-b01a-87827d7b8351"),
                            Name = "Daiane Viana dos Santos"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("OrderPaid")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("OrderTotal")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Priority", b =>
                {
                    b.Property<Guid>("PriorityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PriorityId");

                    b.ToTable("Priorities");

                    b.HasData(
                        new
                        {
                            PriorityId = new Guid("192a00ec-a662-4a6f-9376-cf59c241698e"),
                            Code = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Prioridade máxima para o nível de contratação"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Project", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = new Guid("91bb85ac-8e13-4b9f-bbcb-a21b1f1a3c9a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sem descrição",
                            Name = "Banco Itaú"
                        },
                        new
                        {
                            ProjectId = new Guid("c132b5dd-479a-4c57-8969-0fd5f62d7def"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sem descrição",
                            Name = "Santander"
                        },
                        new
                        {
                            ProjectId = new Guid("dce7d803-a44f-4a92-b52d-aa2006376bc6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sem descrição",
                            Name = "Itaú"
                        },
                        new
                        {
                            ProjectId = new Guid("d6f0b8bd-2c2c-4d44-ae92-b6a29c7c73e9"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sem descrição",
                            Name = "Hsbc"
                        },
                        new
                        {
                            ProjectId = new Guid("4a92afdf-bff6-454d-bff5-45e5b1fd2edb"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sem descrição",
                            Name = "América"
                        },
                        new
                        {
                            ProjectId = new Guid("5ceaa5ef-a0a1-495f-8b69-178ce284d018"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sem descrição",
                            Name = "Caixa"
                        },
                        new
                        {
                            ProjectId = new Guid("4f8d68ea-78a2-4449-be9c-6b474f4f2ffd"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sem descrição",
                            Name = "Inter"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Recruiter", b =>
                {
                    b.Property<Guid>("RecruiterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("RecruiterId");

                    b.ToTable("Recruiters");

                    b.HasData(
                        new
                        {
                            RecruiterId = new Guid("1fb97415-ceaf-4a99-ac53-0476620c0d61"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Amanda Nobrega"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Squad", b =>
                {
                    b.Property<Guid>("SquadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("SquadId");

                    b.ToTable("Squads");

                    b.HasData(
                        new
                        {
                            SquadId = new Guid("b38454c2-9d8b-48fe-8e0d-e5f3bf3f80b7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Squad de colaboradores que atuam por teletrabalho",
                            Name = "Squad de automação"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.StatusJob", b =>
                {
                    b.Property<Guid>("StatusJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("StatusJobId");

                    b.ToTable("StatusJobs");

                    b.HasData(
                        new
                        {
                            StatusJobId = new Guid("75410d2f-8784-401d-97f8-a4d00b8c0309"),
                            Code = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Aberta"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Technology", b =>
                {
                    b.Property<Guid>("TechnologyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("TechnologyId");

                    b.ToTable("Techonologies");

                    b.HasData(
                        new
                        {
                            TechnologyId = new Guid("1080b4e8-6c88-4937-b041-01158f7649a2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Framework para desenvolvimento de Single Page Applications",
                            Name = "AngularJS",
                            Type = "Frontend"
                        },
                        new
                        {
                            TechnologyId = new Guid("fc69eabf-ead5-4a93-8a17-c76882913453"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Framework para desenvolvimento de Single Page Applications",
                            Name = "ReactJS",
                            Type = "Frontend"
                        },
                        new
                        {
                            TechnologyId = new Guid("b6dc1e53-9b22-4884-aba2-c5b66e17df48"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Framework para desenvolvimento de Single Page Applications e Mobile",
                            Name = "Flutter",
                            Type = "Frontend"
                        },
                        new
                        {
                            TechnologyId = new Guid("889c8a85-567b-476c-be06-00a018b5254a"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Framework para desenvolvimento de Single Page Applications",
                            Name = "VueJS",
                            Type = "Frontend"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.YearsOfExperience", b =>
                {
                    b.Property<Guid>("YearsOfExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ViewValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("YearsOfExperienceId");

                    b.ToTable("YearsOfExperience");

                    b.HasData(
                        new
                        {
                            YearsOfExperienceId = new Guid("03cef292-b366-4ec0-b1ec-e02e54380ef6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ViewValue = "1 - 2"
                        });
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Candidate", b =>
                {
                    b.HasOne("EverisHire.HireManagement.Domain.Entities.Job", "Job")
                        .WithMany("Candidates")
                        .HasForeignKey("JobId");
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Event", b =>
                {
                    b.HasOne("EverisHire.HireManagement.Domain.Entities.Category", "Category")
                        .WithMany("Events")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EverisHire.HireManagement.Domain.Entities.Job", b =>
                {
                    b.HasOne("EverisHire.HireManagement.Domain.Entities.Project", "Project")
                        .WithMany("Jobs")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
